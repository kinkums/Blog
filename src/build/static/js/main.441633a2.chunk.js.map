{"version":3,"sources":["pages/AboutPage.js","pages/article-content.js","pages/NotFoundPage.js","components/UpvotesSection.js","components/AddCommentForm.js","components/CommentsList.js","pages/ArticlePage.js","pages/ArticlesListPage.js","pages/HomePage.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["AboutPage","articles","name","title","content","NotFoundPage","UpvotesSection","upvotes","articleName","setArticleInfo","upvoteArticle","a","fetch","method","response","json","body","id","onClick","AddCommentForm","useState","setName","commentText","setCommentText","addComment","JSON","stringify","postedBy","text","headers","type","value","onChange","event","target","rows","cols","CommentsList","comments","map","comment","className","key","ArticlePage","articleInfo","useParams","useEffect","result","fetchArticleInfo","matchingArticle","find","article","paragraph","ArticlesListPage","to","substring","HomePage","NavBar","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.441633a2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const AboutPage = () => (\r\n    <>\r\n        <h1> About this blog... </h1>\r\n        <p>\r\n            This blog has the articles regarding technology, yoga, health, alcoholic beverages, cocktails, travel and wild life.\r\n            New articles in this site would be uploaded on regular basis. Articles regarding other topics would also be added in\r\n            near future and also based on the comments from the viewers. Majority of the content in this site would be based on my\r\n            experience and knowledge. Some times, a part of my content would be based upon data from other sites.\r\n        </p>\r\n    </>\r\n);\r\n\r\n\r\n    \r\n","export const articles = [\r\n    {\r\n        name: 'Yoga',\r\n        title: 'Yoga for all ages',\r\n        content: [\r\n            `The word \"Yoga\" comes from the Sanskrit language, meaning union or merger. The goal \r\n            of this discipline is to strike a balance between the body, mind and breath, with \r\n            the ultimate aim of attaining self-enlightment. It has been estimated by some \r\n            scholars that Yoga is about 5000 years old. Several scientists also claim that it is\r\n            a highly developed and scientific discipline for healthy living that has been\r\n            perfected through milleniums.`,\r\n            `Lord Krishna says to Arjuna: \"Howsoever men approach Me, even so do I reward them,\r\n            for, the path men take from every side, is mine, O Partha\". The four paths are:\r\n            the path of work (Karma-Yoga), the path of devotion or love (Bhakti-Yoga), the path\r\n            of psychic control (Raja-Yoga) and the path of self-analysis and knowledge (Jnana-Yoga).`,\r\n            `Karma-Yoga: or the yoga of selfless action tells that through the correct actions, the\r\n            'troublemaker' ego can turn into the 'troubleshooter' ego. It says that even if you don't\r\n            believe in God, just focus on your work with utmost honesty, dedication and power of your\r\n            mind. Be non-attached and keep working for work's sake. Instead of worrying about the results,\r\n            leave the fruits of your work to the Lord.`,\r\n            `Bhakti-Yoga: is the process of inner purification. Love is the vital element of all human\r\n            beings, it teaches. Love is pure and cosmic, but ego pollutes it and gives out negative elements\r\n            like lust, greed, jealousy and anger. God is the only one who truly loves us. Pour holy thoughts \r\n            into the mind with prayer, chant holy words, study holy books and keep the holy company close to\r\n            your heart.`,\r\n            `Raja-Yoga: seeks to attain the divine by igniting the flame of knowledge of the self within. Most\r\n            seekers do not have the patience and perseverance to follow the path of reason. Teaching the process\r\n            of meditation and concentration, it tells you to confront the restlessness of the mind and uproot it.`,\r\n            `Jnana-Yoga: is the path of Knowledge. Weeding out the darkness of ignorance through the light of\r\n            knowledge, it brings the 'fire' and 'light' alive by burning all the impuritied of the mind. The \r\n            mind does not give up its attachment to wordly pleasures unless it has tasted something greater and \r\n            higher. Self-knowledge according to Jnana-Yoga is the true liberation.`,\r\n        ]\r\n    },    {\r\n        name: 'Microservices',\r\n        title: 'Understanding Microservices',\r\n        content: [\r\n            `What are Microservices?`,\r\n            `- Microservices are grains of application code that run minimal functionality that can be isolated from\r\n            other grains of application code`,\r\n            `- The different grains are loosely coupled to each other`,\r\n            `- The different grains are independently developed and maintained`,\r\n            `Microservices Benefits:`,\r\n            `- When broken down in pieces, applications are easier to build and maintain`,\r\n            `- Each piece is independently developed, and the application itself is just the sum of all pieces`,\r\n            `- Smaller pieces of application code are easier to understand`,\r\n            `- Developers can work on applications independently`,\r\n            `- If one component fails, you spin up another while the rest of the application continues to function`,\r\n            `- Smaller components are easier to scale`,\r\n            `- Individual components are easier to fit into continuous delivery pipelines and complex deployment scenarios`,\r\n            `Understanding Controllers and Microservices:`,\r\n            `- A container is an application that runs based on a container image. The\r\n            container image is a lightweight standalone executable package of software\r\n            that includes everything that is needed to run a application`,\r\n            `- Because containers are lightweight and include all dependencies required\r\n            to run an application, containers have become the standard for developing\r\n            applications`,\r\n            `- As containers are focusing on their specific functionality, they are perfect\r\n            building blocks for building microservices`,\r\n            `- The main requirement is that the different components are connected to\r\n            eachother the right way, by providing static values instead of variables`,\r\n            `- These static values can be provided in a very flexible way by using\r\n            container orchestration platforms such as Kubernetes`,\r\n            `How to break up Monolithic Applications?`,\r\n            `- Connection parameters to database and middleware need to be changed from\r\n            hard-coded to variables that can be managed in a flexible way`,\r\n            `- In web applications, application calls need to be changed to fixed public DNS\r\n            host names`,\r\n            `- Security needs to be modified, to ensure that one application is allowed to\r\n            access other applications. This is known as cross-origin resource sharing`,\r\n            `- Breaking up Monolitic applications can be made easier using different\r\n            solutions that are provided in Kubernetes and other orchestration\r\n            platforms`,\r\n        ]\r\n    },     {\r\n        name: 'Bourbon-Whiskey',\r\n        title: \"Bourbon Whiskey and it's types\",\r\n        content: [\r\n            `Bourbon Whiskey Styles: Bourbon may be produced anywhere in the United States (a common misconception being Bourbon is \r\n            only made in Kentucky). Rich Vanilla aromas and sweetness separates Bourbon from other Whiskeys. It must be produced with\r\n            a mash containing atleast 51% of corn. It must be distilled to no more than 160 degree proof in charred new OAK containers\r\n            stored <125 degrees proof and bottled at not less that 80 proof.`,\r\n            `Single Barrel:\r\n            These bottles of bourbon come from one barrel and are not blended with any others. Flavors will be different from barrel\r\n            to barrel within the same brand of single-barrel bourbon since the amount of pieces of wood, char in the barrel, and\r\n            conditions a barrel was aged will change. Blanton's was the first single-barrel bourbon to emerge onto the market\r\n            in the 1980's. Eagle Rare is a great example.`,\r\n            `Cask Strength:\r\n            These bourbons can pack a punch and are known for being some of the most flavorful in the whiskey world. Before going \r\n            into the barrel bourbons are mixed with water to reduce the proof below the 125 proof regulation. During the aging process\r\n            the water will evaporate so when the barrel is emptied the spirit can be higher proof than when it entered. Before\r\n            bottling most bourbons are cut again with water to get to the distiller's desired proof. Not these guys. These are\r\n            full-flavor, intense, put-hair-on-your-chest type bourbons. Cask strength or barrel proof bourbon drinkers will\r\n            sometimes cut their pours with a few drops of water to get it to their own flavor preference. Since these come straight\r\n            from the barrel there tends to be a spice-forward palette with notes of the burn and char from the barrel. Example is\r\n            Maker's Mark Cask Strength Bourbon Whisky`,\r\n            `Wheated:\r\n            Otherwise known as “wheaters\" these are a type of bourbon where the distillers use wheat as the secondary ingredient\r\n            in the mashbill. This yields a less spicy, less sour, and less floral taste to the end product. These bourbons are\r\n            typically known for being nutty and soft on the palette. The holy grail of bourbon, Pappy Van Winkle Family Reserve,\r\n            is the most famous wheated bourbon. Example is Jim Beam Black`,\r\n            `High Rye:\r\n            The core ingredients of any bourbon is corn, barley, and rye. Traditional recipes tend to have about 10% rye but a few\r\n            bourbons go beyond this making for a more bold and almost spicy flavor. A few examples of high rye bottles you may have\r\n            heard of: Bulleit, Four Roses Single Barrel and Redemption High Rye Bourbon. Example is Bulleit Bourbon`,\r\n            `High Corn:\r\n            Bourbon must be at least 51% corn according to regulations however a few go beyond that. These bourbons are known for\r\n            their sweet flavor. These bourbons are not however, to be confused with a different and distinct separate category of\r\n            whiskey called corn whiskey. We are a fan of the Hudson Baby Bourbon bottle hailing from New York state's Tuthilltown\r\n            Spirits and made with 100% New York corn. Example is Hudson Baby Bourbon Whiskey`,\r\n            `Small Batch:\r\n            An increasingly familiar term in the world of bourbon, there is no real definition of what a “small-batch\" bourbon \r\n            actually is. It typically refers to a bourbon produced by mixing the contents of a small number of select barrels.\r\n            Compared a distillers' flagship bottle which could contain a bourbon mixture from hundreds or thousands of barrels,\r\n            this gives a distiller more freedom to experiment. Small batch bourbons are produced in less quantity and the distiller\r\n            will oftentimes note the batch or barrel number on the bottle. A couple of our small batch recommendations are Woodford\r\n            Reserve and Basil Haydens Kentucky Bourbon`,            \r\n        ]\r\n    },  {\r\n        name: 'React-Boilerplate',\r\n        title: 'Boilerplate options for React',\r\n        content: [\r\n            `Create-React-App is the most common option, but there are many others.`,\r\n            `Next js - new addition to react Eco-system attracting a good bit of attendtion. It provides 'Server Side\r\n            Rendering' and 'Code Splitting'. These are very important when high perforamnce and SEO are required. It is \r\n            very configurable and can be applied in a wide variety of situations. Only real downside of Next js is - although \r\n            it is open source, it's development seems to be heavily influenced by hosting company called vercel. It is heavily\r\n            in favour of hosting in one particular platform. https://nextjs.org/ is the web site for your reference.`,\r\n            `Next framework is Gatsby. It is used mainly to generate static sites from react code with the idea that this\r\n            improves performance. Gatsby is usually a good choice when you want to create things like blog sites where you\r\n            have a single blog page component that renders the content of every single blog post. Please visit\r\n            https://gatsbyjs.org for further details.`,\r\n            `Next is React boilerplate. It is a boilerplate generator for React projects. It provides a pretty amazing amount\r\n            of functionality out of the box, including stuff like i18n, offline first capabilities, redux state management etc.\r\n            It is a great way to get performant application going with very little headwork. Check this out by going to\r\n            https://reactboilerplate.com`,\r\n            `Next is Razzle. It comes standard with Server side rendering, something that reactboilerplate currently does not \r\n            support. It is similar to Create-React-App but the setup is taken off our plate. Check out Razzle at \r\n            github.com/jaredpalmer/razzle.`\r\n        ]\r\n    }, {\r\n        name: 'Big-Five',\r\n        title: 'Big-Five Animals in Africa',\r\n        content: [\r\n            `Today is the day I talk about something which scares most people: resumes.\r\n            In reality, I'm not sure why people have such a hard time with proin congue\r\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \r\n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \r\n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \r\n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \r\n            sodales purus euismod.`,\r\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\r\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\r\n        ]\r\n    },\r\n];\r\n\r\n","import React from 'react';\r\n\r\nexport const NotFoundPage = () => (\r\n    <h1> 404: Page Not Found! </h1>\r\n);","import React from 'react';\r\n\r\nexport const UpvotesSection = ({upvotes, articleName, setArticleInfo}) => {\r\n    const upvoteArticle = async () => {\r\n        const response = await fetch(`/api/articles/${articleName}/upvotes`, {\r\n            method: 'post',\r\n        });\r\n        const body = await response.json();\r\n        setArticleInfo(body);\r\n    };\r\n    return (\r\n        <div id=\"upvotes-section\">\r\n            <button onClick = {() => {\r\n                upvoteArticle();\r\n            }}>Add Upvote</button>\r\n            <p>This article has {upvotes} upvotes</p>\r\n        </div>\r\n    );\r\n}\r\n    \r\n","import React, { useState } from 'react';\r\n\r\nexport const AddCommentForm = ({ articleName, setArticleInfo }) => {\r\n    const [name, setName] = useState('');\r\n    const [commentText, setCommentText] = useState('');\r\n\r\n    const addComment = async () => {\r\n        const response = await fetch(`/api/articles/${articleName}/comments`, {\r\n            method: 'post',\r\n            body: JSON.stringify({\r\n                postedBy: name,\r\n                text: commentText,\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        });\r\n        const body = await response.json();\r\n        setArticleInfo(body);\r\n        setName('');\r\n        setCommentText('');\r\n    }\r\n\r\n    return ( \r\n        <div id = \"add-comment-form\">\r\n            <h3> Add a Comment </h3>\r\n            <label>Name: <input type=\"text\" value = {name} onChange={(event) => setName(event.target.value)} /></label>\r\n            <label>Comment:<textarea rows=\"4\" cols=\"50\" value={commentText} onChange={(event) => setCommentText(event.target.value)} /></label>\r\n            <button onClick = {() => addComment()}>Add Comment</button>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { AddCommentForm } from './AddCommentForm';\r\n\r\nexport const CommentsList = ({ comments, articleName, setArticleInfo }) => (\r\n    <>\r\n        <h3>Comments:</h3>\r\n        {comments.map(comment => (\r\n            <div className = \"comment\" key = {comment.text}>\r\n                <h4>{comment.postedBy}</h4>\r\n                <p>{comment.text}</p>\r\n            </div>\r\n        ))}\r\n        <AddCommentForm articleName = {articleName} setArticleInfo= {setArticleInfo} />\r\n    </>\r\n)\r\n    \r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { articles } from './article-content';\r\nimport { NotFoundPage } from './NotFoundPage';\r\nimport { UpvotesSection } from '../components/UpvotesSection';\r\nimport { CommentsList } from '../components/CommentsList';\r\n\r\nexport const ArticlePage = () => {\r\n\r\n    const [articleInfo, setArticleInfo] = useState({upvotes : 0, comments : []});\r\n    const { name } = useParams();\r\n\r\n    useEffect(() => {\r\n        const fetchArticleInfo = async () => {\r\n            const result = await fetch(`/api/articles/${name}`);\r\n            const body = await result.json();\r\n            setArticleInfo(body);\r\n        }\r\n        fetchArticleInfo();\r\n    }, [name]);\r\n\r\n    const matchingArticle = articles.find(article => article.name === name);\r\n\r\n    return matchingArticle ? (\r\n        <>\r\n            <h1>{matchingArticle.title}</h1>               \r\n            <UpvotesSection upvotes={articleInfo.upvotes} articleName={name} setArticleInfo={setArticleInfo} />\r\n            {matchingArticle.content.map(paragraph => ( \r\n                <p key={paragraph}>{paragraph}</p>\r\n            ))}  \r\n            <CommentsList comments = {articleInfo.comments} articleName = {name} setArticleInfo = {setArticleInfo} />       \r\n        </>\r\n    ) : (\r\n        <NotFoundPage />\r\n    );\r\n\r\n\r\n} \r\n\r\n\r\n","import React from 'react';\r\nimport { articles } from './article-content';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const ArticlesListPage = () => (\r\n    <>\r\n        <h1> Articles </h1>\r\n        {articles.map(article => (\r\n            <Link to={`/articles/${article.name}`} className=\"article-list-item\" key={article.name}>\r\n                <h3>{article.title}</h3> \r\n                <p>{article.content[0].substring(0,150)}...</p>\r\n            </Link>\r\n        ))}\r\n    </>\r\n    \r\n);\r\n   \r\n\r\n    \r\n","import React from 'react';\r\n\r\nexport const HomePage = () => (\r\n    <>\r\n        <h1>Hello, welcome to my blog!</h1>\r\n            <p>\r\n                Welcome to my blog! Proin congue\r\n                ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \r\n                Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \r\n                non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \r\n                eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \r\n                sodales purus euismod.\r\n            </p>\r\n            <p>\r\n                Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n                Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n                nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n                sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n                interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n                consequat quam. Vivamus accumsan dui in facilisis aliquet.,\r\n            </p>\r\n            <p>\r\n                Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n                Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n                nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n                sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n                interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n                consequat quam. Vivamus accumsan dui in facilisis aliquet.,\r\n            </p>\r\n    </>\r\n);\r\n \r\n\r\n    \r\n\r\n    \r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const NavBar = () => (\r\n    <nav>\r\n        <ul>\r\n            <li><Link to=\"/\">Home</Link></li>\r\n            <li><Link to=\"/about\">About</Link></li>\r\n            <li><Link to=\"/articles-list\">Articles</Link></li>\r\n        </ul>\r\n    </nav>\r\n);","import React from 'react';\nimport './App.css';\nimport { AboutPage, ArticlePage, ArticlesListPage, HomePage, NotFoundPage } from './pages';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { NavBar } from './components';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavBar />\n        <div id=\"page-body\">\n          <Switch>        \n            <Route path = \"/\" exact><HomePage/></Route>\n            <Route path = \"/about\"><AboutPage/></Route>\n            <Route path = \"/articles-list\"><ArticlesListPage/></Route>\n            <Route path = \"/articles/:name\"><ArticlePage/></Route> \n            <Route><NotFoundPage /></Route>        \n          </Switch> \n        </div>\n      </div>           \n    </Router>    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}